<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Forgot Password - SoundShare</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding: 0;
      background-image: url('https://res.cloudinary.com/dsjt220g8/image/upload/v1732522074/websitee_lffl5s.jpg');
      background-size: cover;
      background-position: center;
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .card {
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(15px);
      border-radius: 20px;
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
      color: #fff;
      padding: 2rem;
      max-width: 420px;
      width: 100%;
      border: 1px solid rgba(255, 255, 255, 0.18);
      animation: slideIn 0.6s ease-out;
    }

    @keyframes slideIn {
      0% {
        opacity: 0;
        transform: translateX(100px);
      }
      100% {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .form-label {
      color: #fff;
    }

    .form-control {
      color: #000;
      background: rgba(255, 255, 255, 0.9);
      border: none;
      border-radius: 10px;
      padding: 0.75rem;
    }

    .form-control::placeholder {
      color: #444;
    }

    .form-control:focus {
      background: #fff;
      color: #000;
    }

    .btn-primary {
      background-color: #6caca4;
      border: none;
      font-weight: 600;
      transition: 0.3s;
    }

    .btn-primary:hover {
      background-color: #8d6267;
    }

    #status {
      min-height: 1.5rem;
    }

    .alert {
      padding: 0.5rem;
      margin-top: 1rem;
    }

    h4 {
      font-weight: 600;
      color: #fff;
    }
  </style>
</head>
<body>
  <div class="card">
    <h4 class="mb-3 text-center">Forgot Password</h4>

    <% if (messages && messages.error) { %>
      <div class="alert alert-danger"><%= messages.error %></div>
    <% } %>

    <!-- Email Form -->
    <form id="forgotForm">
      <div class="mb-3">
        <label for="email" class="form-label">Enter your registered email</label>
        <input type="email" id="email" name="email" class="form-control" placeholder="your@email.com" required />
      </div>
      <button type="submit" class="btn btn-primary w-100">Send OTP</button>
    </form>

    <!-- OTP Verification Form -->
    <form id="otpForm" style="display: none;" class="mt-4">
      <div class="mb-3">
        <label for="otp" class="form-label">Enter OTP sent to your email</label>
        <input type="text" id="otp" name="otp" class="form-control" placeholder="6-digit code" required />
      </div>
      <button type="submit" class="btn btn-primary w-100">Verify OTP</button>
    </form>

    <!-- New Password Form -->
    <form id="resetForm" style="display: none;" class="mt-4">
      <div class="mb-3">
        <label for="newPassword" class="form-label">New Password</label>
        <input type="password" id="newPassword" class="form-control" placeholder="••••••••" required />
      </div>
      <div class="mb-3">
        <label for="confirmPassword" class="form-label">Confirm New Password</label>
        <input type="password" id="confirmPassword" class="form-control" placeholder="••••••••" required />
      </div>
      <button type="submit" class="btn btn-primary w-100">Update Password</button>
    </form>

    <div id="status" class="mt-3 text-center fw-bold"></div>
  </div>

  <script>
    const forgotForm = document.getElementById('forgotForm');
    const otpForm = document.getElementById('otpForm');
    const resetForm = document.getElementById('resetForm');
    const status = document.getElementById('status');
    let email, otp;

    forgotForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      status.textContent = "Sending OTP...";
      email = document.getElementById('email').value;

      const formData = new URLSearchParams();
      formData.append('email', email);

      const res = await fetch('/forgot-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: formData.toString(),
      });

      const data = await res.json();

      if (data.success) {
        status.textContent = "OTP sent to your email!";
        forgotForm.style.display = 'none';
        otpForm.style.display = 'block';
        otpForm.classList.add('animate');
        status.classList.remove('text-danger');
        status.classList.add('text-success');
      } else {
        status.textContent = data.message || "Something went wrong.";
        status.classList.add('text-danger');
      }
    });

    otpForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      otp = document.getElementById('otp').value;

      const params = new URLSearchParams();
      params.append('email', email);
      params.append('otp', otp);

      const res = await fetch('/verify-forgot-otp', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: params.toString(),
      });

      const data = await res.json();
      status.textContent = data.message;

      if (data.success) {
        otpForm.style.display = 'none';
        resetForm.style.display = 'block';
        resetForm.classList.add('animate');
        status.textContent = '';
        status.classList.remove('text-danger');
      } else {
        status.classList.add('text-danger');
      }
    });

    resetForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;

      if (newPassword !== confirmPassword) {
        status.textContent = "Passwords do not match.";
        status.classList.add('text-danger');
        return;
      }

      const params = new URLSearchParams();
      params.append('email', email);
      params.append('otp', otp);
      params.append('newPassword', newPassword);

      const res = await fetch('/reset-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: params.toString(),
      });

      const data = await res.json();
      status.textContent = data.message;

      if (data.success) {
        status.classList.remove('text-danger');
        status.classList.add('text-success');
        status.textContent = "Password updated successfully! Redirecting...";
        setTimeout(() => window.location.href = '/login', 2000);
      }
    });
  </script>
</body>
</html>
